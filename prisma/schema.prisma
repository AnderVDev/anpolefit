datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role          @default(USER)
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 
 
model VerificationToken {
  identifier String   @map("_id")
  token      String   @unique
  expires    DateTime
  @@id([identifier])
}

model PasswordResetToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String
  token      String   @unique
  expires    DateTime

  @@unique([email, token])
}

model UserNutritionProfiles {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @unique
  proteinKcal  Int
  proteinGrams Int
  carbKcal     Int
  carbGrams    Int
  fatKcal      Int
  fatGrams     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}